== Get-Weather

This is a small Rails project that uses the Wunderground API. It takes one input,
which is a US zip code, and returns the State, City and current temperature in
Farenheit for that zipcode. Documentation for the Wunderground API can be found
here link:http://www.wunderground.com/weather/api/d/docs?d=data/conditions

The app allows for failures in the API connection with exception handling. If an error
is encountered, the user is notified of a connection error and told to try again later.

The zip code input is validated to be ensure it is a string of exactly 5 digit characters.
If an incorrect zip format is entered, the user is notified by an error message.

Before the current weather conditions are requested from the API, the zip code input
is first used to request a valid location. If it is not a valid zip code, then no
location is returned and the user is notified that the zip code does not exist.

Rspec was used to perform both unit and function tests. The tests check that the methods
in the Forecast model work, and that the zip code validation works. The function tests 
confirm that the correct weather data and error messages are displayed.

The app is hosted on Heroku and can be found at:
link:http://get-weather.herokuapp.com/.

The app uses Rails, AJAX, Haml and CSS.


== Cloning and running the app

1. Check out the code from github: 
  
  <tt>$ git clone git://github.com/NickyH/weather-app.git</tt>

2. Change into the app directory by typing <tt>$ cd weather-app</tt>

3. To run the app, start the Rails server by typing <tt>$ rails s</tt> in the terminal

4. Go to your web browser and enter <tt>http://localhost:3000/</tt> in the address bar

5. You can now begin to use the app from your local port


== Running the tests

1. At the terminal, change the directory to <tt>weather-app</tt> 

2. Type <tt>rspec</tt> to run the tests
